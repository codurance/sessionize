# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push events but only for the main branch
  push:
    branches: [ main ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Set up JDK 11
        uses: actions/setup-java@v2.0.0
        with:
          java-version: '11'
          distribution: 'adopt'

      # Runs a set of commands using the runners shell
      - name: Maven Package
        run: mvn -B clean package

  build-and-deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
    # checkout the repo
    - name: 'Checkout GitHub Action'
      uses: actions/checkout@master
        
    - name: 'Login via Azure CLI'
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    
    - uses: azure/docker-login@v1
      with:
        login-server: sessionizetest.azurecr.io
        username: ${{ secrets.REGISTRY_USERNAME }}
        password: ${{ secrets.REGISTRY_PASSWORD }}
    - run: |
        docker build -t sessionizetest.azurecr.io/sessionizer:1.0.0 .
        docker push sessionizetest.azurecr.io/sessionizer:1.0.0
    - name: 'Deploy to Azure Container Instances'
      uses: 'azure/aci-deploy@v1'
      with:
        secure-environment-variables: MONGODB_CONNECTION_STRING=${{ secrets.MONGODB_CONNECTION_STRING }}
        resource-group: Sessionize-test
        dns-name-label: sessionize-test
        image: sessionizetest.azurecr.io/sessionizer:1.0.0
        registry-login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
        registry-username: ${{ secrets.REGISTRY_USERNAME }}
        registry-password: ${{ secrets.REGISTRY_PASSWORD }}
        name: sessionizetest
        location: 'west europe'
